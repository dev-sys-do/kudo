syntax = "proto3";

package node_agent;
import "google/protobuf/empty.proto";

// Represents the status of a container
enum Status {
  RUNNING = 0;
  STARTING = 1;
  STOPPING = 2;
  DESTROYING = 3;
  TERMINATED = 4;
  CRASHED = 5;
  FAILED = 6;
  SCHEDULING = 7;
  SCHEDULED = 8;
}

// Represents the different Type of a workflow
enum Type {
  CONTAINER = 0;
}

// Represents signals who can be send to a container
enum Signal {
  STOP = 0;
  KILL = 1;
}

// Represents an Instance (eg. a container, VM ...)
message Instance {
  string id = 1;
  string name = 2;
  Type type = 3;
  Status status = 4;
  string uri = 5;
  repeated string environment = 6;
  Resource resource = 7;
  repeated Port ports = 8;
  string ip = 9;
}

// Represents the current state of a container (eg. starting, running, ...)
message InstanceStatus {
  string id = 1;
  Status status = 2;
  string description = 3;
  Resource resource = 4;
}

message Port {
  int32 source = 1;
  int32 destination = 2;
}

// Represent the resource usage of a node or a workload 
message ResourceSummary {
  int32 cpu = 1;
  int32 memory = 2;
  int32 disk = 3;
}

message Resource {
  ResourceSummary limit = 1; // cpu, memory, disk limit for a workload or a node
  ResourceSummary usage = 2; // cpu, memory, disk usage in real-time for a workload or a node
}

// Represent a signal sent to an instance
message SignalInstruction {
  Instance instance = 1;
  Signal signal = 2;
}

service InstanceService {
  rpc create (Instance) returns (stream InstanceStatus) {}
  rpc signal (SignalInstruction) returns (google.protobuf.Empty) {}
}